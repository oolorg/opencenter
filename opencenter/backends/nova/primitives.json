{
    "create_az": {
        "args": {
           "az_name": {
               "friendly": "Create Availability Zone",
               "description": "The name of the availability zone to create.  This should be unique to the Nova Cluster.",
               "default": "nova",
               "type": "string",
               "required": true
            },
            "libvirt_type": {
               "friendly": "Virtualization Type",
               "description": "libvirt virtualization type.  Usually qemu or kvm.",
               "default": "kvm",
               "type": "string",
               "required": true
            }
       },
       "constraints":  [ "'nova-compute' in facts.backends" ],
       "consequences": []
    },
    "backup_cluster": {
        "args": {
           "backup_name": {
               "friendly": "Backup Folder Name",
               "description": "The name of backup Folder.",
               "default": "",
               "placeholder": "XXX_TEST_ENV",
               "type": "string",
               "required": true
            },
           "auth": {
               "friendly": "auth",
               "description": "auth",
               "default": "",
               "placeholder": "auth",
               "type": "string",
               "required": false
            }
       },
       "constraints":  [ "'chef-environment' in facts.backends" ],
       "consequences": []
    },
    "restore_cluster": {
        "args": {
           "restore_name": {
               "friendly": "Restor Folder Name",
               "description": "The name of backup Folder.",
               "default": "",
               "placeholder": "XXX_TEST_ENV",
               "type": "string",
               "required": true
            },
           "auth": {
               "friendly": "auth",
               "description": "auth",
               "default": "",
               "placeholder": "auth",
               "type": "string",
               "required": false
            }
       },
       "constraints":  [ "'chef-environment' in facts.backends" ],
       "consequences": []
    },
    "create_cluster": {
        "args": {
            "cluster_name": {
                "friendly": "Nova Cluster Name",
                "description": "The name of your new Nova cluster.  This should be unique and composed of alphanumeric characters, -s, and _s.",
                "default": "NovaCluster",
                "placeholder": "NovaCluster",
                "type": "string",
                "required": true
            },
            "nova_public_if": {
                "friendly": "Nova Public Network Interface",
                "description": "The network interface that is connected to the public (Internet/WAN) network on compute nodes.  Compute nodes will NAT instance traffic out from this interface unless a specific floating ip has been assigned to an instance.",
                "default": "",
                "placeholder": "eth0",
                "type": "string",
                "required": true
            },
            "keystone_admin_pw": {
                "friendly": "OpenStack Admin Password",
                "description": "The password for the OpenStack administrative user.",
                "default": "",
                "placeholder": "secret",
                "type": "password",
                "required": true
            },
            "nova_dmz_cidr": {
                "friendly": "NAT Exclusion CIDRs",
                "description": "A comma separated list of CIDR network ranges that will be excluded from NAT rules.  This is useful for allowing direct communication to and from instances from other network ranges without the use of floating ips.",
                "default": "",
                "placeholder": "172.16.0.0/24",
                "type": "cidr",
                "required": true
            },
            "nova_vm_fixed_range": {
                "friendly": "VM Network CIDR",
                "description": "IP addresses will be allocated from this network by Nova to instances and compute hosts as necessary.  This network should be dedicated to OpenStack and not shared with other services.",
                "default": "",
                "placeholder": "192.168.0.0/24",
                "type": "cidr",
                "required": true
            },
            "nova_vm_fixed_if": {
                "friendly": "VM Network Interface",
                "description": "The network interface of the VM network on compute nodes.",
                "default": "",
                "placeholder": "eth1",
                "type": "string",
                "required": true
            },
            "nova_vm_bridge": {
                "friendly": "Nova VM Bridge Interface",
                "description": "The bridge device that will be used as the VM bridge on compute nodes.  The default value is usually acceptable here.  This bridge will be created by Nova as necessary and does not need to be manually configured on the system.",
                "default": "br100",
                "placeholder": "br100",
                "type": "string",
                "required": true
            },
            "osops_mgmt": {
                "friendly": "Nova Management Network CIDR",
                "description": "The CIDR of network on which internal Nova management services such as API services will run.  An IP address from this network should be configured on all hosts in the nova cluster.",
                "default": "",
                "placeholder": "192.168.200.0/24",
                "type": "cidr",
                "required": true
            },
            "osops_nova": {
                "friendly": "Nova Internal Network CIDR",
                "description": "The CIDR of network to run services used by Nova internally, such as RabbitMQ and Mysql.  An IP address from this network should be configured on all hosts in the Nova cluster.",
                "default": "",
                "placeholder": "192.168.200.0/24",
                "type": "cidr",
                "required": true
            },
            "osops_public": {
                "friendly": "Nova Public Network CIDR",
                "description": "The CIDR of network to run public Nova services on (lb, etc).  An IP address from this network should be configured on all hosts in the Nova cluster.",
                "default": "",
                "placeholder": "192.168.200.0/24",
                "type": "cidr",
                "required": true
            },
            "chef_server": {
                "friendly": "Chef Server",
                "description": "The chef server to use.",
                "type": "interface",
                "name": "chef-server",
                "required": true
            },
            "libvirt_type": {
               "friendly": "Virtualization Type",
               "description": "libvirt virtualization type.  Usually qemu or kvm.",
               "default": "kvm",
               "type": "string",
               "required": true
            },
           "tenant_name": {
               "friendly": "tenant name",
               "description": "tenant name",
               "default": "",
               "placeholder": "tenant name",
               "type": "string",
               "required": false
            },
            "network_provider": {
               "friendly": "OpenStack Network Type(neutron)",
               "description": "quantum or nova",
               "default": "nova",
               "type": "string",
               "required": true
            },
            "neutron_plugin": {
               "friendly": "Neutron Plugin(neutron)",
               "description": "Neutron Plugin",
               "default": "ovs",
               "type": "string",
               "required": true
            },
            "neutron_ovs_network_type": {
               "friendly": "Neutron Network Type(neutron)",
               "description": "gre or vlan",
               "default": "gre",
               "type": "string",
               "required": true
            },
            "neutron_ofc_host": {
               "friendly": "ofc host(neutron)",
               "description": "open flow controller host ip address",
               "default": "127.0.0.1",
               "type": "string",
               "required": true
            },
            "neutron_lbaas_enabled": {
               "friendly": "LbaaS Enabled(neutron)",
               "description": "use LbaaS Agent",
               "default": "True",
               "type": "string",
               "required": true
            },
            "neutron_of_if": {
               "friendly": "OpenFlow Interface(neutron)",
               "description": "OpenFlow Network Interface for VM",
               "default": "True",
               "type": "string",
               "required": true
            }
        },
        "constraints": [ "ifcount('chef-server') > 0" ],
        "consequences": []
    },
    "set_sdnbox": {
        "args": {
            "backend": {
                "type": "string",
                "required": true
            },
            "tokenid": {
                "type": "string",
                "required": true
            }
        },
        "constraints": [],
        "consequences": [ "facts.backends := union(facts.backends, 'sdn')" ]
    }
}
